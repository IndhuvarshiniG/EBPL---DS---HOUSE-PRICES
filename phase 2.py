# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kYc_j7InPOoUAkM5H_bUVKwmPS-3VyDG
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import r2_score, mean_squared_error

# Step 1: Generate synthetic housing data
np.random.seed(0)
n_samples = 100
area = np.random.randint(800, 3000, size=n_samples)     # area in sqft
rooms = np.random.randint(2, 6, size=n_samples)
age = np.random.randint(1, 30, size=n_samples)
price = area * 150 + rooms * 10000 - age * 2000 + np.random.normal(0, 20000, size=n_samples)

# Create DataFrame
df = pd.DataFrame({'Area': area, 'Rooms': rooms, 'Age': age, 'Price': price})

# Step 2: Train-Test Split
X = df[['Area', 'Rooms', 'Age']]
y = df['Price']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

# Step 3: Train Model
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

# Step 4: Performance
print("RÂ² Score:", r2_score(y_test, y_pred))
print("MSE:", mean_squared_error(y_test, y_pred))

# Step 5: Bar Chart - Feature Importance (using coefficients)
feature_importance = pd.Series(model.coef_, index=X.columns)
feature_importance.plot(kind='bar', title='Feature Importance')
plt.ylabel('Coefficient Value')
plt.show()

# Step 6: Pie Chart - Room distribution
room_counts = df['Rooms'].value_counts()
room_counts.plot(kind='pie', autopct='%1.1f%%', title='Room Distribution')
plt.ylabel('')
plt.show()

# Step 7: Bar Plot - Actual vs Predicted Prices
comparison = pd.DataFrame({'Actual': y_test.values, 'Predicted': y_pred})
comparison = comparison.head(10)
comparison.plot(kind='bar', title='Actual vs Predicted Prices')
plt.xlabel('Sample Index')
plt.ylabel('House Price')
plt.xticks(rotation=0)
plt.tight_layout()
plt.show()